#For the analysis of variance the excel data of "Sosa relevant normiert" and "LV u19 relevant normiert" was used.


#Load data of "Sosa"
library(readxl)
Sosa_relevant_normiert <- read_excel("Online-Uni/Hohenheim/Masterarbeit VfB/Daten/Sosa relevant normiert.xlsx")
View(Sosa_relevant_normiert)

SosaRN <- Sosa_relevant_normiert

#Create boxplots for the visualization & save them
boxplot(SosaRN$`D-erf`, SosaRN$`%D`, SosaRN$`%F`, SosaRN$`%Z`, SosaRN$`%1/3`, SosaRN$`%Box`, names = c("Erfolgreiche Dribblings", "Erfolgsquote Dribblings", "Erfolgsquote Flanken", "Erfolgsquote Zweikampf", "Erfolgsquote P채sse ins letzte Drittel", "Erfolgsquote P채sse in den Strafraum")) 
boxplot(SosaRN$VoEff, xlab = "Vorlageneffizienz") 


#Calculate mean, trimmed means, median, variance and standard deviation
mapply(mean, Sosa_relevant_normiert[,c(9, 11, 12, 15, 17, 20, 23)] 
mapply(median, Sosa_relevant_normiert[,c(9, 11, 12, 15, 17, 20, 23)])
mapply(mean, Sosa_relevant_normiert[,c(9, 11, 12, 15, 17, 20, 23)], trim = 0.1)
mapply(mean, Sosa_relevant_normiert[,c(9, 11, 12, 15, 17, 20, 23)], trim = 0.2)
mapply(mean, Sosa_relevant_normiert[,c(9, 11, 12, 15, 17, 20, 23)], trim = 0.05)
mapply(var, Sosa_relevant_normiert[,c(9, 11, 12, 15, 17, 20, 23)])
mapply(sd, Sosa_relevant_normiert[,c(9, 11, 12, 15, 17, 20, 23)])


#Load data of "U19"
library(readxl)
LV_u19_relevant_normiert <- read_excel("Online-Uni/Hohenheim/Masterarbeit VfB/Daten/LV u19 relevant normiert.xlsx") 
View(LV_u19_relevant_normiert)


#Create boxplots for the visualization & save them
boxplot(LV_u19_relevant_normiert$Derfolg, LV_u19_relevant_normiert$`%D`, LV_u19_relevant_normiert$`%F`, LV_u19_relevant_normiert$`%Z`, LV_u19_relevant_normiert$`%1/3`, LV_u19_relevant_normiert$`%Box`, names = c("Erfolgreiche Dribblings", "Erfolgsquote Dribblings", "Erfolgsquote Flanken", "Erfolgsquote Zweikampf", "Erfolgsquote P채sse ins letzte Drittel", "Erfolgsquote P채sse in den Strafraum"))
boxplot(LV_u19_relevant_normiert$VoEff, xlab ="Vorlageneffizienz")


#Calculate mean, trimmed means, median, variance and standard deviation
mapply(mean, LV_u19_relevant_normiert[,c(7, 9, 10, 13, 15, 18, 21)])
mapply(var, LV_u19_relevant_normiert[,c(7, 9, 10, 13, 15, 18, 21)])
mapply(median, LV_u19_relevant_normiert[,c(7, 9, 10, 13, 15, 18, 21)])
mapply(sd, LV_u19_relevant_normiert[,c(7, 9, 10, 13, 15, 18, 21)])
mapply(mean, LV_u19_relevant_normiert[,c(7, 9, 10, 13, 15, 18, 21)], trim = 0.05)
mapply(mean, LV_u19_relevant_normiert[,c(7, 9, 10, 13, 15, 18, 21)], trim = 0.1)
mapply(mean, LV_u19_relevant_normiert[,c(7, 9, 10, 13, 15, 18, 21)], trim = 0.2)


#Tests for normality
shapiro.test(SosaRN$`D-erf`)
shapiro.test(SosaRN$VoEff)
shapiro.test(SosaRN$`%F`)
shapiro.test(SosaRN$`%D`)
shapiro.test(SosaRN$`%Z`)
shapiro.test(SosaRN$`%1/3`)
shapiro.test(SosaRN$`%Box`)

shapiro.test(LV_u19_relevant_normiert$Derfolg)
shapiro.test(LV_u19_relevant_normiert$VoEff)
shapiro.test(LV_u19_relevant_normiert$`%F`)
shapiro.test(LV_u19_relevant_normiert$`%D`)
shapiro.test(LV_u19_relevant_normiert$`%Z`)
shapiro.test(LV_u19_relevant_normiert$`%1/3`)
shapiro.test(LV_u19_relevant_normiert$`%Box`)

#Load the data
library(readxl)
SV <- read_excel("Online-Uni/Hohenheim/Masterarbeit VfB/Daten/Spielervergleich normierte Daten.xlsx")
View(SV)

#Group needed variables and perform Levenes Test
#First for the data of Sosa
library(lawstat)
y <- c(SV$`D-erf`,SV$`Quote D`,SV$`Quote Z`,SV$VoEff, SV$`Quote 1/3`,SV$`Quote Box`, SV$`%F`)
levene.test(y, group = y) 

#Now for the U19 players
y <- c(SV$`Quote F2`, SV$Derfolg2, SV$`Quote D2`, SV$`Quote Z2`, SV$VoEff2, SV$`Quote 1/32`, SV$`Quote Box2`)
levene.test(y, group = y)

#Perform t-test & Chi-square test to compare the mean values of Sosas metrics to U19 players 
t.test(SV$`D-erf`, SV$Dribbeln2)
t.test(SV$`Quote D`, SV$`Quote D2`)
t.test(SV$`Quote Z`, SV$`Quote Z2`)
t.test(SV$VoEff, SV$VoEff2)
t.test(SV$`Quote 1/3`, SV$`Quote 1/32`)
t.test(SV$`%F`, SV$`Quote F2`)
t.test(SV$`Quote Box`, SV$`Quote Box2`)

#Test effect size of T-test
library(effectsize)
cohens_d(SV$`D-erf`, SV$Dribbeln2, data = SV)
cohens_d(SV$`Quote D`, SV$`Quote D2`, data = SV)
cohens_d(SV$`Quote Z`, SV$`Quote Z2`, data = SV)
cohens_d(SV$VoEff, SV$VoEff2, data = SV)
cohens_d(SV$`Quote 1/3`, SV$`Quote 1/32`, data = SV)
cohens_d(SV$`%F`, SV$`Quote F2`, data = SV)
cohens_d(SV$`Quote Box`, SV$`Quote Box2`, data = SV)


chisq.test(SV$`D-erf`,SV$Derfolg2)
chisq.test(SV$`Quote D`, SV$`Quote D2`)
chisq.test(SV$`Quote Z`,SV$`Quote Z2`)
chisq.test(SV$VoEff, SV$VoEff2)
chisq.test(SV$`Quote 1/3`, SV$`Quote 1/32`)
chisq.test(SV$`Quote Box`, SV$`Quote Box2`)
chisq.test(SV$`%F`, SV$`Quote F2`)






  

